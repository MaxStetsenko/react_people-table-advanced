{"version":3,"sources":["component/PeopleTable/PeopleTable.tsx","component/Header/Header.tsx","component/Layout.tsx","component/Page/Homepage.tsx","utils/api.ts","component/Forms/NewPerson.tsx","component/MoveBackBtn/MoveBackBtn.tsx","component/Page/CreatePeoplePage.tsx","component/Loader/Loader.tsx","component/PeopleTable/THead.tsx","component/PeopleTable/PersonName.tsx","component/PeopleTable/TrPerson.tsx","component/Page/Peoplepage.tsx","App.tsx","index.tsx"],"names":["SortBy","Header","className","to","Layout","Homepage","getPeople","a","fetch","response","json","data","Promise","setTimeout","console","log","NewPerson","useForm","register","errors","formState","handleSubmit","watch","useState","people","setPeople","allMothers","setAllMothers","allFathers","setAllFathers","born","name","navigate","useNavigate","useEffect","then","autoComplete","onSubmit","state","status","message","htmlFor","placeholder","required","minLength","value","type","id","onBlur","length","parentPeople","reduce","acc","el","sex","died","push","handleOnFocus","min","max","Date","getFullYear","disabled","map","person","MoveBackBtn","onClick","CreatePeoplePage","Spinner","color","height","width","THead","React","memo","handleFilter","thHeadTitles","sortOrder","sortBy","thHeadOffFilter","sortMethod","setSortMethod","th","scope","includes","title","toLowerCase","selectedSortOrder","icon","faSortDown","classNames","PersonName","personName","slug","search","useLocation","selector","scrollOptions","block","behavior","TrPerson","useParams","father","fatherName","mother","motherName","PeopleTable","peopleServer","showMessage","setShowMessage","useSearchParams","searchParams","searchQuery","get","resolve","res","modifyPeople","filter","smallQuery","Name","Sex","sort","b","localeCompare","Died","Born","handleChangeInput","useCallback","event","target","set","delete","toString","replace","onChange","colSpan","Peoplepage","setPeopleServer","isLoading","setIsLoading","find","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad4e4052.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Link, useNavigate, useSearchParams, useLocation,\n} from 'react-router-dom';\nimport { People } from '../../types/People';\nimport { THead } from './THead';\nimport { TrPerson } from './TrPerson';\n\ntype Props = {\n  peopleServer: People[];\n};\n\nenum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Died = 'died',\n  Born = 'born',\n}\n\nconst thHeadTitles = ['Name', 'Sex', 'Born', 'Died', 'Father', 'Mother'];\nconst thHeadOffFilter = ['Father', 'Mother'];\n\nexport const PeopleTable: React.FC<Props> = React.memo(({ peopleServer }) => {\n  const [showMessage, setShowMessage] = useState(false);\n\n  const [searchParams] = useSearchParams() || '';\n  const searchQuery = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    if (state) {\n      setShowMessage(true);\n\n      const wait: Promise<boolean> = new Promise(resolve => {\n        setTimeout(() => resolve(false), 5000);\n      });\n\n      wait.then((res) => {\n        setShowMessage(res);\n      });\n    }\n  }, []);\n\n  let modifyPeople = peopleServer;\n\n  if (searchQuery?.length) {\n    modifyPeople = modifyPeople.filter((people: People) => {\n      const smallQuery = searchQuery.toLowerCase();\n\n      return people.motherName?.toLowerCase().includes(smallQuery)\n        || people.fatherName?.toLowerCase().includes(smallQuery);\n    });\n  }\n\n  if (sortBy?.length) {\n    switch (sortBy) {\n      case SortBy.Name:\n      case SortBy.Sex:\n        switch (sortOrder) {\n          case 'asc':\n            modifyPeople.sort((a: People, b: People) => (\n              a[sortBy].localeCompare(b[sortBy])\n            ));\n            break;\n\n          case 'desc':\n            modifyPeople.sort((a: People, b: People) => (\n              b[sortBy].localeCompare(a[sortBy])\n            ));\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      case SortBy.Died:\n      case SortBy.Born:\n        switch (sortOrder) {\n          case 'asc':\n            modifyPeople.sort((a: People, b: People) => (\n              a[sortBy] - b[sortBy]\n            ));\n            break;\n\n          case 'desc':\n            modifyPeople.sort((a: People, b: People) => (\n              b[sortBy] - a[sortBy]\n            ));\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const handleChangeInput = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (value.length > 0) {\n      searchParams.set('query', value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    navigate(`?${searchParams.toString()}`, { replace: true });\n  }, []);\n\n  const handleFilter = useCallback((sortMethod: string, selectedSortOrder: string) => {\n    if (sortMethod.length > 0) {\n      searchParams.set('sortBy', sortMethod);\n    } else {\n      searchParams.delete('sortBy');\n    }\n\n    if (selectedSortOrder.length > 0) {\n      searchParams.set('sortOrder', selectedSortOrder);\n    } else {\n      searchParams.delete('sortOrder');\n    }\n\n    navigate(`?${searchParams.toString()}`, { replace: true });\n  }, [searchQuery]);\n\n  return (\n    <>\n      {\n        showMessage && (\n          <div className={`message bg-${state.status}`}>\n            <span>{state.message}</span>\n          </div>\n        )\n      }\n      <div className=\"d-flex\">\n        <input\n          type=\"search\"\n          value={searchQuery}\n          onChange={(event) => handleChangeInput(event)}\n          placeholder=\"Search\"\n          className=\"form-control\"\n        />\n        <Link\n          to=\"create\"\n          className=\"btn btn-primary\"\n        >\n          Create new person\n        </Link>\n      </div>\n      <table className=\"table\">\n        <THead\n          handleFilter={handleFilter}\n          thHeadTitles={thHeadTitles}\n          thHeadOffFilter={thHeadOffFilter}\n          sortBy={sortBy}\n          sortOrder={sortOrder}\n        />\n\n        <tbody>\n          {\n            !modifyPeople.length ? (\n              <tr className=\"text-center fs-4\">\n                <td colSpan={thHeadTitles.length}>People not found</td>\n              </tr>\n            ) : (\n              modifyPeople.map(person => (\n                <TrPerson key={person.slug} person={person} />\n              ))\n            )\n          }\n        </tbody>\n      </table>\n    </>\n  );\n});\n","import { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header bg-dark\">\n      <div className=\"container\">\n        <ul className=\"header__navbar\">\n          <li>\n            <NavLink\n              to=\"/\"\n              className=\"header__navbar-link\"\n            >\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"people\"\n              className=\"header__navbar-link\"\n            >\n              People\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Header } from './Header';\n\nexport const Layout: React.FC = () => {\n  return (\n    <>\n      <Header />\n\n      <main className=\"main\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","export const Homepage: React.FC = () => (\n  <h1>Home Page</h1>\n);\n","const timer = () => {\n  return new Promise(response => {\n    setTimeout(() => {\n      response(true);\n    }, 500);\n  });\n};\n\nexport const getPeople = async () => {\n  let data;\n\n  try {\n    const response = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n    data = await response.json();\n\n    await timer();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  return data;\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { People } from '../../types/People';\nimport { getPeople } from '../../utils/api';\n\ntype FormValues = {\n  name: string,\n  sex: string,\n  born: string,\n  died: string,\n  mother: string,\n  father: string,\n};\n\ntype PeopleReduce = [People[], People[]];\n\nexport const NewPerson: React.FC = () => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n  } = useForm();\n  const [people, setPeople] = useState([]);\n  const [allMothers, setAllMothers] = useState<People[]>([]);\n  const [allFathers, setAllFathers] = useState<People[]>([]);\n\n  const [born, name] = watch(['born', 'name']);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const handleOnFocus = () => {\n    if (born.length > 3) {\n      const parentPeople = people.reduce((acc: PeopleReduce, el: People) => {\n        if (el.sex === 'f' && el.died >= born) {\n          acc[0].push(el);\n        } else if (el.sex === 'm' && el.died >= born) {\n          acc[1].push(el);\n        }\n\n        return acc;\n      }, [[], []]);\n\n      setAllMothers(parentPeople[0]);\n      setAllFathers(parentPeople[1]);\n    }\n  };\n\n  const onSubmit = (data: FormValues) => {\n    // eslint-disable-next-line no-console\n    console.log(data);\n\n    navigate(\n      '/people',\n      {\n        state: {\n          status: 'success',\n          message: `Person '${name}' - added successfully`,\n        },\n      },\n    );\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label\">Full name</label>\n        <input\n          className=\"form-control\"\n          placeholder=\"Max Stets\"\n          {...register('name', {\n            required: 'This field is required',\n            minLength: {\n              value: 4,\n              message: 'Min length 3',\n            },\n          })}\n        />\n        {errors?.name && (\n          <p className=\"mt-1 field-error\">{errors.name.message}</p>\n        )}\n      </div>\n      <label className=\"form-label\">Sex:</label>\n      <div className=\"input-group\">\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"sex-m\"\n            {...register('sex', {\n              required: true,\n            })}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"sex-m\"\n          >\n            male\n          </label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"sex-f\"\n            {...register('sex', {\n              required: true,\n            })}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"sex-f\"\n          >\n            female\n          </label>\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"born\" className=\"form-label\">Born</label>\n        <input\n          className=\"form-control\"\n          placeholder=\"1996\"\n          type=\"number\"\n          {...register('born', {\n            required: 'This field is required',\n            onBlur: () => handleOnFocus(),\n            min: {\n              value: 1400,\n              message: 'Minimum year - 1400',\n            },\n            max: {\n              value: new Date().getFullYear(),\n              message: `Max year ${new Date().getFullYear()}`,\n            },\n          })}\n        />\n        {errors?.born && (\n          <p className=\"mt-1 field-error\">{errors.born.message}</p>\n        )}\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"died\" className=\"form-label\">Died</label>\n        <input\n          className=\"form-control\"\n          placeholder=\"1996\"\n          {...register('died', {\n            required: 'This field is required',\n            disabled: born?.length < 4,\n            min: {\n              value: +born,\n              message: 'Died - born should be >= 0 and < 150',\n            },\n            max: {\n              value: +born + 150,\n              message: 'Died - born should be >= 0 and < 150',\n            },\n          })}\n        />\n        {errors?.died && (\n          <p className=\"mt-1 field-error\">{errors.died.message}</p>\n        )}\n      </div>\n\n      <label className=\"form-label\">Mother name:</label>\n      <select\n        className=\"form-select mb-3\"\n        {...register('motherName', {\n          disabled: born?.length < 4,\n        })}\n      >\n        <option value={0}>--</option>\n        {allMothers && (\n          allMothers.map(person => (\n            <option value={person.name} key={person.name}>{person.name}</option>\n          ))\n        )}\n      </select>\n\n      <label className=\"form-label\">Father name:</label>\n      <select\n        className=\"form-select mb-3\"\n        {...register('fatherName', {\n          disabled: born?.length < 4,\n        })}\n      >\n        <option value={0}>--</option>\n        {allFathers && (\n          allFathers.map(person => (\n            <option value={person.name} key={person.name}>{person.name}</option>\n          ))\n        )}\n      </select>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n      >\n        Add new person\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MoveBackBtn.scss';\n\nexport const MoveBackBtn: React.FC = () => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className=\"MoveBackBtn\"\n      type=\"button\"\n      onClick={() => navigate(-1)}\n    >\n      Back\n    </button>\n  );\n};\n","import React from 'react';\nimport { NewPerson } from '../Forms/NewPerson';\nimport { MoveBackBtn } from '../MoveBackBtn/MoveBackBtn';\n\nexport const CreatePeoplePage: React.FC = () => {\n  return (\n    <>\n      <div className=\"d-flex mb-5\">\n        <MoveBackBtn />\n        <h1 className=\"ms-4\">Create People</h1>\n      </div>\n      <NewPerson />\n    </>\n  );\n};\n","import Loader from 'react-loader-spinner';\n\nconst Spinner: React.FC = () => (\n  <Loader\n    type=\"ThreeDots\"\n    color=\"#212529\"\n    height={80}\n    width={80}\n  />\n);\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport classNames from 'classnames';\n\ntype Props = {\n  handleFilter: (sortBy: string, selectedOrder: string) => void;\n  thHeadTitles: string[];\n  sortOrder: string;\n  sortBy: string;\n  thHeadOffFilter: string[];\n};\n\ntype SortMethod = 'asc' | 'desc' | '';\n\nexport const THead: React.FC<Props> = React.memo(({\n  handleFilter,\n  thHeadTitles,\n  sortOrder,\n  sortBy,\n  thHeadOffFilter,\n}) => {\n  const [sortMethod, setSortMethod] = useState<SortMethod>('');\n\n  const handleButtonSort = (title: string, selectedSortOrder: SortMethod) => {\n    switch (selectedSortOrder) {\n      case 'asc':\n        handleFilter(title, selectedSortOrder);\n        break;\n\n      case 'desc':\n      default:\n        handleFilter(title, selectedSortOrder);\n        break;\n    }\n\n    setSortMethod(selectedSortOrder);\n  };\n\n  return (\n    <thead>\n      <tr>\n        {\n          thHeadTitles.map(th => (\n            <th\n              scope=\"col\"\n              key={th}\n              className=\"table-th-head\"\n            >\n              {\n                !thHeadOffFilter.includes(th) ? (\n                  <button\n                    type=\"button\"\n                    className=\"table-button\"\n                    onClick={() => handleButtonSort(th.toLowerCase(), sortMethod === ('' || 'desc') ? 'asc' : 'desc')}\n                  >\n                    <span>{th}</span>\n                    <FontAwesomeIcon\n                      icon={faSortDown}\n                      className={classNames('icon-sort',\n                        { 'icon-sort--active': sortBy === th.toLowerCase() && sortOrder === 'desc' })}\n                    />\n                  </button>\n                ) : (\n                  <span>{th}</span>\n                )\n              }\n\n            </th>\n          ))\n        }\n      </tr>\n    </thead>\n  );\n});\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport ScrollIntoView from 'react-scroll-into-view';\n\ntype Props = {\n  personName: string;\n  slug: string | undefined;\n};\n\nexport const PersonName: React.FC<Props> = React.memo(({ personName, slug = '' }) => {\n  const { search } = useLocation();\n\n  return (\n    <ScrollIntoView\n      selector={`#${slug}`}\n      scrollOptions={{\n        block: 'nearest',\n        behavior: 'auto',\n      }}\n    >\n      <Link\n        to={`${slug}${search}`}\n      >\n        {personName}\n      </Link>\n    </ScrollIntoView>\n  );\n});\n","import React, { } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonName } from './PersonName';\nimport { People } from '../../types/People';\n\ntype Props = {\n  person: People;\n};\n\nexport const TrPerson: React.FC<Props> = React.memo(({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      key={person.name}\n      className={classNames(\n        'tr',\n        {\n          'tr--f': person.sex === 'f' && person.slug === slug,\n          'tr--m': person.sex === 'm' && person.slug === slug,\n        },\n      )}\n      id={person.slug}\n    >\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          person.father\n            ? (\n              <PersonName\n                slug={person.father.slug}\n                personName={person.fatherName}\n              />\n            ) : <b>{person.fatherName || '---'}</b>\n        }\n      </td>\n      <td>\n        {\n          person.mother\n            ? (\n              <PersonName\n                slug={person.mother.slug}\n                personName={person.motherName}\n              />\n            ) : <b>{person.mother || '---'}</b>\n        }\n      </td>\n    </tr>\n  );\n});\n","import React, { useState, useEffect } from 'react';\nimport { People } from '../../types/People';\nimport { getPeople } from '../../utils/api';\nimport Spinner from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const Peoplepage: React.FC = () => {\n  const [peopleServer, setPeopleServer] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(people => {\n        setPeopleServer(people.map((person: People) => {\n          const father = people.find((el: People) => person.fatherName === el.name);\n          const mother = people.find((el: People) => person.motherName === el.name);\n\n          return { ...person, father, mother };\n        }));\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1>People Page</h1>\n\n      {\n        isLoading ? (\n          <div className=\"spinner-wrapper\">\n            <Spinner />\n          </div>\n        ) : (\n          <PeopleTable peopleServer={peopleServer} />\n        )\n      }\n    </>\n  );\n};\n","import { Route, Routes } from 'react-router-dom';\nimport { Layout } from './component/Layout';\nimport { Homepage } from './component/Page/Homepage';\nimport { CreatePeoplePage } from './component/Page/CreatePeoplePage';\nimport { Peoplepage } from './component/Page/Peoplepage';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Homepage />} />\n          <Route path=\"people\" element={<Peoplepage />}>\n            <Route path=\":slug\" element={<Peoplepage />} />\n          </Route>\n          <Route path=\"people/create\" element={<CreatePeoplePage />} />\n          <Route path=\"*\" element={<p>Page not found!!!</p>} />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}