{"version":3,"sources":["component/PeopleTable/PeopleTable.tsx","component/Header/Header.tsx","component/Layout.tsx","utils/api.ts","component/Loader/Loader.tsx","component/PeopleTable/THead.tsx","component/PeopleTable/PersonName.tsx","component/PeopleTable/TrPerson.tsx","component/Page/PeoplePage.tsx","component/Page/HomePage.tsx","component/Ui/SelectCreatePerson.tsx","component/Forms/NewPerson.tsx","component/MoveBackBtn/MoveBackBtn.tsx","component/Page/CreatePeoplePage.tsx","App.tsx","index.tsx"],"names":["SortBy","Header","className","to","Layout","getPeople","a","fetch","response","json","data","Promise","setTimeout","console","log","Spinner","type","color","height","width","THead","React","memo","handleFilter","thHeadTitles","sortOrder","sortBy","thHeadOffFilter","useState","sortMethod","setSortMethod","map","th","scope","includes","onClick","title","toLowerCase","selectedSortOrder","icon","faSortDown","classNames","PersonName","personName","slug","search","useLocation","selector","scrollOptions","block","behavior","TrPerson","person","useParams","sex","id","name","born","died","father","fatherName","mother","motherName","PeopleTable","peopleServer","showMessage","setShowMessage","useSearchParams","searchParams","searchQuery","get","navigate","useNavigate","state","useEffect","resolve","then","res","modifyPeople","length","filter","people","smallQuery","Name","Sex","sort","b","localeCompare","Died","Born","sortingColumn","handleChangeInput","useCallback","event","value","target","set","delete","toString","replace","status","message","onChange","placeholder","colSpan","PeoplePage","setPeopleServer","isLoading","setIsLoading","find","el","HomePage","SelectCreatePeople","titleLabel","startValue","selectName","register","useForm","htmlFor","disabled","NewPerson","errors","formState","handleSubmit","watch","setPeople","allMothers","setAllMothers","allFathers","setAllFathers","autoComplete","onSubmit","required","minLength","onBlur","parentPeople","reduce","acc","push","handleOnFocus","min","max","Date","getFullYear","MoveBackBtn","CreatePeoplePage","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e3a2384.chunk.js","sourcesContent":["import React, {\n  useCallback, useEffect, useState,\n} from 'react';\nimport {\n  Link, useNavigate, useSearchParams, useLocation,\n} from 'react-router-dom';\nimport { People } from '../../types/People';\nimport { THead } from './THead';\nimport { TrPerson } from './TrPerson';\n\ntype Props = {\n  peopleServer: People[];\n};\n\nenum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Died = 'died',\n  Born = 'born',\n}\n\nconst thHeadTitles = ['Name', 'Sex', 'Born', 'Died', 'Father', 'Mother'];\nconst thHeadOffFilter = ['Father', 'Mother'];\n\nexport const PeopleTable: React.FC<Props> = React.memo(({ peopleServer }) => {\n  const [showMessage, setShowMessage] = useState(false);\n\n  const [searchParams] = useSearchParams() || '';\n  const searchQuery = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    if (state) {\n      setShowMessage(true);\n\n      const wait: Promise<boolean> = new Promise(resolve => {\n        setTimeout(() => resolve(false), 5000);\n      });\n\n      wait.then((res) => {\n        setShowMessage(res);\n      });\n    }\n  }, []);\n\n  let modifyPeople = peopleServer;\n\n  const sortingQuery = () => {\n    modifyPeople = modifyPeople.filter((people: People) => {\n      const smallQuery = searchQuery.toLowerCase();\n\n      return people.motherName?.toLowerCase().includes(smallQuery)\n        || people.fatherName?.toLowerCase().includes(smallQuery)\n        || people.name?.toLowerCase().includes(smallQuery);\n    });\n  };\n\n  const sortingColumn = () => {\n    switch (sortBy) {\n      case SortBy.Name:\n      case SortBy.Sex:\n        switch (sortOrder) {\n          case 'asc':\n            modifyPeople.sort((a: People, b: People) => (\n              a[sortBy].localeCompare(b[sortBy])\n            ));\n            break;\n\n          case 'desc':\n            modifyPeople.sort((a: People, b: People) => (\n              b[sortBy].localeCompare(a[sortBy])\n            ));\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      case SortBy.Died:\n      case SortBy.Born:\n        switch (sortOrder) {\n          case 'asc':\n            modifyPeople.sort((a: People, b: People) => (\n              a[sortBy] - b[sortBy]\n            ));\n            break;\n\n          case 'desc':\n            modifyPeople.sort((a: People, b: People) => (\n              b[sortBy] - a[sortBy]\n            ));\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  if (searchQuery?.length) {\n    sortingQuery();\n  }\n\n  if (sortBy?.length) {\n    sortingColumn();\n  }\n\n  const handleChangeInput = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (value.length > 0) {\n      searchParams.set('query', value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    navigate(`?${searchParams.toString()}`, { replace: true });\n  }, []);\n\n  const handleFilter = useCallback((sortMethod: string, selectedSortOrder: string) => {\n    if (sortMethod.length > 0) {\n      searchParams.set('sortBy', sortMethod);\n    } else {\n      searchParams.delete('sortBy');\n    }\n\n    if (selectedSortOrder.length > 0) {\n      searchParams.set('sortOrder', selectedSortOrder);\n    } else {\n      searchParams.delete('sortOrder');\n    }\n\n    navigate(`?${searchParams.toString()}`, { replace: true });\n  }, [searchQuery]);\n\n  return (\n    <>\n      {\n        showMessage && (\n          <div className={`message bg-${state.status}`}>\n            <span>{state.message}</span>\n          </div>\n        )\n      }\n      <div className=\"d-flex\">\n        <input\n          type=\"search\"\n          value={searchQuery}\n          onChange={(event) => handleChangeInput(event)}\n          placeholder=\"Search\"\n          className=\"form-control\"\n        />\n        <Link\n          to=\"create\"\n          className=\"btn btn-primary ms-5\"\n        >\n          Create new person\n        </Link>\n      </div>\n      <table className=\"table\">\n        <THead\n          handleFilter={handleFilter}\n          thHeadTitles={thHeadTitles}\n          thHeadOffFilter={thHeadOffFilter}\n          sortBy={sortBy}\n          sortOrder={sortOrder}\n        />\n\n        <tbody>\n          {\n            !modifyPeople.length ? (\n              <tr className=\"text-center fs-4\">\n                <td colSpan={thHeadTitles.length}>People not found</td>\n              </tr>\n            ) : (\n              modifyPeople.map(person => (\n                <TrPerson key={person.slug} person={person} />\n              ))\n            )\n          }\n        </tbody>\n      </table>\n    </>\n  );\n});\n","import { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"header bg-dark\">\n      <div className=\"container\">\n        <ul className=\"header__navbar\">\n          <li>\n            <NavLink\n              to=\"/\"\n              className=\"header__navbar-link\"\n            >\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"people\"\n              className=\"header__navbar-link\"\n            >\n              People\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Header } from './Header';\n\nexport const Layout: React.FC = () => {\n  return (\n    <>\n      <Header />\n\n      <main className=\"main\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","const timer = () => {\n  return new Promise(response => {\n    setTimeout(() => {\n      response(true);\n    }, 500);\n  });\n};\n\nexport const getPeople = async () => {\n  let data;\n\n  try {\n    const response = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n\n    data = await response.json();\n\n    await timer();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n\n  return data;\n};\n","import Loader from 'react-loader-spinner';\n\nconst Spinner: React.FC = () => (\n  <Loader\n    type=\"ThreeDots\"\n    color=\"#212529\"\n    height={80}\n    width={80}\n  />\n);\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nimport classNames from 'classnames';\n\ntype Props = {\n  handleFilter: (sortBy: string, selectedOrder: string) => void;\n  thHeadTitles: string[];\n  sortOrder: string;\n  sortBy: string;\n  thHeadOffFilter: string[];\n};\n\ntype SortMethod = 'asc' | 'desc' | '';\n\nexport const THead: React.FC<Props> = React.memo(({\n  handleFilter,\n  thHeadTitles,\n  sortOrder,\n  sortBy,\n  thHeadOffFilter,\n}) => {\n  const [sortMethod, setSortMethod] = useState<SortMethod>('');\n\n  const handleButtonSort = (title: string, selectedSortOrder: SortMethod) => {\n    switch (selectedSortOrder) {\n      case 'asc':\n        handleFilter(title, selectedSortOrder);\n        break;\n\n      case 'desc':\n      default:\n        handleFilter(title, selectedSortOrder);\n        break;\n    }\n\n    setSortMethod(selectedSortOrder);\n  };\n\n  return (\n    <thead>\n      <tr>\n        {\n          thHeadTitles.map(th => (\n            <th\n              scope=\"col\"\n              key={th}\n              className=\"table-th-head\"\n            >\n              {\n                !thHeadOffFilter.includes(th) ? (\n                  <button\n                    type=\"button\"\n                    className=\"table-button\"\n                    onClick={() => handleButtonSort(th.toLowerCase(), sortMethod === ('' || 'desc') ? 'asc' : 'desc')}\n                  >\n                    <span>{th}</span>\n                    <FontAwesomeIcon\n                      icon={faSortDown}\n                      className={classNames('icon-sort',\n                        { 'icon-sort--active': sortBy === th.toLowerCase() && sortOrder === 'desc' })}\n                    />\n                  </button>\n                ) : (\n                  <span>{th}</span>\n                )\n              }\n\n            </th>\n          ))\n        }\n      </tr>\n    </thead>\n  );\n});\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport ScrollIntoView from 'react-scroll-into-view';\n\ntype Props = {\n  personName: string;\n  slug: string | undefined;\n};\n\nexport const PersonName: React.FC<Props> = React.memo(({ personName, slug = '' }) => {\n  const { search } = useLocation();\n\n  return (\n    <ScrollIntoView\n      selector={`#${slug}`}\n      scrollOptions={{\n        block: 'nearest',\n        behavior: 'auto',\n      }}\n    >\n      <Link\n        to={`${slug}${search}`}\n      >\n        {personName}\n      </Link>\n    </ScrollIntoView>\n  );\n});\n","import React, { } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonName } from './PersonName';\nimport { People } from '../../types/People';\n\ntype Props = {\n  person: People;\n};\n\nexport const TrPerson: React.FC<Props> = React.memo(({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      key={person.name}\n      className={classNames(\n        'tr',\n        {\n          'tr--f': person.sex === 'f' && person.slug === slug,\n          'tr--m': person.sex === 'm' && person.slug === slug,\n        },\n      )}\n      id={person.slug}\n    >\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          person.father\n            ? (\n              <PersonName\n                slug={person.father.slug}\n                personName={person.fatherName}\n              />\n            ) : <b>{person.fatherName || '---'}</b>\n        }\n      </td>\n      <td>\n        {\n          person.mother\n            ? (\n              <PersonName\n                slug={person.mother.slug}\n                personName={person.motherName}\n              />\n            ) : <b>{person.mother || '---'}</b>\n        }\n      </td>\n    </tr>\n  );\n});\n","import React, { useState, useEffect } from 'react';\nimport { People } from '../../types/People';\nimport { getPeople } from '../../utils/api';\nimport Spinner from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleServer, setPeopleServer] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(people => {\n        setPeopleServer(people.map((person: People) => {\n          const father = people.find((el: People) => person.fatherName === el.name);\n          const mother = people.find((el: People) => person.motherName === el.name);\n\n          return { ...person, father, mother };\n        }));\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1>People Page</h1>\n\n      {\n        isLoading ? (\n          <div className=\"spinner-wrapper\">\n            <Spinner />\n          </div>\n        ) : (\n          <PeopleTable peopleServer={peopleServer} />\n        )\n      }\n    </>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1>Home Page</h1>\n);\n","import { useForm } from 'react-hook-form';\nimport { People } from '../../types/People';\n\ntype Props = {\n  titleLabel: string;\n  people: People[];\n  born: string;\n  startValue?: string;\n  selectName: string;\n};\n\nexport const SelectCreatePeople: React.FC<Props> = ({\n  titleLabel,\n  startValue = '--',\n  people,\n  born,\n  selectName,\n}) => {\n  const {\n    register,\n  } = useForm();\n\n  return (\n    <>\n      <label htmlFor={selectName} className=\"form-label\">{titleLabel}</label>\n      <select\n        className=\"form-select mb-3\"\n        {...register(selectName, {\n          disabled: born?.length < 4,\n        })}\n      >\n        <option value={0}>{startValue}</option>\n        {people && (\n          people.map(person => (\n            <option value={person.name} key={person.name}>{person.name}</option>\n          ))\n        )}\n      </select>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { People } from '../../types/People';\nimport { getPeople } from '../../utils/api';\nimport { SelectCreatePeople } from '../Ui/SelectCreatePerson';\n\ntype FormValues = {\n  name: string,\n  sex: string,\n  born: string,\n  died: string,\n  mother: string,\n  father: string,\n};\n\ntype PeopleReduce = [People[], People[]];\n\nexport const NewPerson: React.FC = () => {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n  } = useForm();\n  const [people, setPeople] = useState([]);\n  const [allMothers, setAllMothers] = useState<People[]>([]);\n  const [allFathers, setAllFathers] = useState<People[]>([]);\n\n  const [born, name] = watch(['born', 'name']);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const handleOnFocus = () => {\n    if (born.length > 3) {\n      const parentPeople = people.reduce((acc: PeopleReduce, el: People) => {\n        if (el.sex === 'f' && el.died >= born) {\n          acc[0].push(el);\n        } else if (el.sex === 'm' && el.died >= born) {\n          acc[1].push(el);\n        }\n\n        return acc;\n      }, [[], []]);\n\n      setAllMothers(parentPeople[0]);\n      setAllFathers(parentPeople[1]);\n    }\n  };\n\n  const onSubmit = (data: FormValues) => {\n    // eslint-disable-next-line no-console\n    console.log(data); // this console log is important!\n\n    navigate(\n      '/people',\n      {\n        state: {\n          status: 'success',\n          message: `Person '${name}' - added successfully`,\n        },\n      },\n    );\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label\">Full name</label>\n        <input\n          className=\"form-control\"\n          placeholder=\"Max Stets\"\n          {...register('name', {\n            required: 'This field is required',\n            minLength: {\n              value: 4,\n              message: 'Min length 3',\n            },\n          })}\n        />\n        {errors?.name && (\n          <p className=\"mt-1 field-error\">{errors.name.message}</p>\n        )}\n      </div>\n      <label className=\"form-label\">Sex:</label>\n      <div className=\"input-group\">\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"sex-m\"\n            {...register('sex', {\n              required: true,\n            })}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"sex-m\"\n          >\n            male\n          </label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            id=\"sex-f\"\n            {...register('sex', {\n              required: true,\n            })}\n          />\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"sex-f\"\n          >\n            female\n          </label>\n        </div>\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"born\" className=\"form-label\">Born</label>\n        <input\n          className=\"form-control\"\n          placeholder=\"1996\"\n          type=\"number\"\n          {...register('born', {\n            required: 'This field is required',\n            onBlur: () => handleOnFocus(),\n            min: {\n              value: 1400,\n              message: 'Minimum year - 1400',\n            },\n            max: {\n              value: new Date().getFullYear(),\n              message: `Max year ${new Date().getFullYear()}`,\n            },\n          })}\n        />\n        {errors?.born && (\n          <p className=\"mt-1 field-error\">{errors.born.message}</p>\n        )}\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"died\" className=\"form-label\">Died</label>\n        <input\n          className=\"form-control\"\n          placeholder=\"1996\"\n          {...register('died', {\n            required: 'This field is required',\n            disabled: born?.length < 4,\n            min: {\n              value: +born,\n              message: 'Died - born should be >= 0 and < 150',\n            },\n            max: {\n              value: +born + 150,\n              message: 'Died - born should be >= 0 and < 150',\n            },\n          })}\n        />\n        {errors?.died && (\n          <p className=\"mt-1 field-error\">{errors.died.message}</p>\n        )}\n      </div>\n\n      <SelectCreatePeople\n        titleLabel=\"Mother name:\"\n        people={allMothers}\n        born={born}\n        selectName=\"MotherName\"\n      />\n\n      <SelectCreatePeople\n        titleLabel=\"Father name:\"\n        people={allFathers}\n        born={born}\n        selectName=\"FatherName\"\n      />\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n      >\n        Add new person\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './MoveBackBtn.scss';\n\nexport const MoveBackBtn: React.FC = () => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className=\"MoveBackBtn\"\n      type=\"button\"\n      onClick={() => navigate(-1)}\n    >\n      Back\n    </button>\n  );\n};\n","import React from 'react';\nimport { NewPerson } from '../Forms/NewPerson';\nimport { MoveBackBtn } from '../MoveBackBtn/MoveBackBtn';\n\nexport const CreatePeoplePage: React.FC = () => {\n  return (\n    <>\n      <div className=\"d-flex mb-5\">\n        <MoveBackBtn />\n        <h1 className=\"ms-4\">Create People</h1>\n      </div>\n      <NewPerson />\n    </>\n  );\n};\n","import { Route, Routes } from 'react-router-dom';\nimport { Layout } from './component/Layout';\nimport { PeoplePage } from './component/Page/PeoplePage';\nimport { HomePage } from './component/Page/HomePage';\nimport { CreatePeoplePage } from './component/Page/CreatePeoplePage';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"people/create\" element={<CreatePeoplePage />} />\n          <Route path=\"*\" element={<p>Page not found!!!</p>} />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}